/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    YourContract: {
      address: "0x700b6a60ce7eaaea56f065753d8dcb9653dbad35",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "greeting",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "premium",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setGreeting",
          inputs: [
            {
              name: "_newGreeting",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "totalCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "userGreetingCounter",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "GreetingChange",
          inputs: [
            {
              name: "greetingSetter",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newGreeting",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "premium",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1755131533.json",
      deploymentScript: "Deploy.s.sol",
    },
    MockUSDC: {
      address: "0xa15bb66138824a1c7167f5e85b957d04dd34e468",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "allowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "decimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transfer",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC20InsufficientAllowance",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "allowance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSpender",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1755131533.json",
      deploymentScript: "Deploy.s.sol",
    },
    zkMedOrganizationProver: {
      address: "0xb19b36b1456e65e3a6d514d3f715f204bd59f431",
      abi: [
        {
          type: "function",
          name: "proof",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "proveOrganizationDomain",
          inputs: [
            {
              name: "unverifiedEmail",
              type: "tuple",
              internalType: "struct UnverifiedEmail",
              components: [
                {
                  name: "email",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "dnsRecord",
                  type: "tuple",
                  internalType: "struct DnsRecord",
                  components: [
                    {
                      name: "name",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "recordType",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "data",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "ttl",
                      type: "uint64",
                      internalType: "uint64",
                    },
                  ],
                },
                {
                  name: "verificationData",
                  type: "tuple",
                  internalType: "struct VerificationData",
                  components: [
                    {
                      name: "validUntil",
                      type: "uint64",
                      internalType: "uint64",
                    },
                    {
                      name: "signature",
                      type: "bytes",
                      internalType: "bytes",
                    },
                    {
                      name: "pubKey",
                      type: "bytes",
                      internalType: "bytes",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "",
              type: "tuple",
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setBlock",
          inputs: [
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setChain",
          inputs: [
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stringToAddress",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "error",
          name: "FailedInnerCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1755131533.json",
      deploymentScript: "Deploy.s.sol",
    },
    zkMedPatientProver: {
      address: "0x8ce361602b935680e8dec218b820ff5056beb7af",
      abi: [
        {
          type: "function",
          name: "proof",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "provePatientEmail",
          inputs: [
            {
              name: "unverifiedEmail",
              type: "tuple",
              internalType: "struct UnverifiedEmail",
              components: [
                {
                  name: "email",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "dnsRecord",
                  type: "tuple",
                  internalType: "struct DnsRecord",
                  components: [
                    {
                      name: "name",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "recordType",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "data",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "ttl",
                      type: "uint64",
                      internalType: "uint64",
                    },
                  ],
                },
                {
                  name: "verificationData",
                  type: "tuple",
                  internalType: "struct VerificationData",
                  components: [
                    {
                      name: "validUntil",
                      type: "uint64",
                      internalType: "uint64",
                    },
                    {
                      name: "signature",
                      type: "bytes",
                      internalType: "bytes",
                    },
                    {
                      name: "pubKey",
                      type: "bytes",
                      internalType: "bytes",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "",
              type: "tuple",
              internalType: "struct zkMedPatientProver.PatientRegistrationData",
              components: [
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setBlock",
          inputs: [
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setChain",
          inputs: [
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stringToAddress",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "error",
          name: "FailedInnerCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1755131533.json",
      deploymentScript: "Deploy.s.sol",
    },
    zkMedPaymentPlanProver: {
      address: "0xe1aa25618fa0c7a1cfdab5d6b456af611873b629",
      abi: [
        {
          type: "function",
          name: "parseAmount",
          inputs: [
            {
              name: "amountStr",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "parseDate",
          inputs: [
            {
              name: "dateStr",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "proof",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "provePaymentPlan",
          inputs: [
            {
              name: "unverifiedEmail",
              type: "tuple",
              internalType: "struct UnverifiedEmail",
              components: [
                {
                  name: "email",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "dnsRecord",
                  type: "tuple",
                  internalType: "struct DnsRecord",
                  components: [
                    {
                      name: "name",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "recordType",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "data",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "ttl",
                      type: "uint64",
                      internalType: "uint64",
                    },
                  ],
                },
                {
                  name: "verificationData",
                  type: "tuple",
                  internalType: "struct VerificationData",
                  components: [
                    {
                      name: "validUntil",
                      type: "uint64",
                      internalType: "uint64",
                    },
                    {
                      name: "signature",
                      type: "bytes",
                      internalType: "bytes",
                    },
                    {
                      name: "pubKey",
                      type: "bytes",
                      internalType: "bytes",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "",
              type: "tuple",
              internalType: "struct zkMedPaymentPlanProver.PaymentPlanData",
              components: [
                {
                  name: "insurerAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "patientAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "insuranceName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "insurerEmailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "patientEmailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "duration",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "monthlyAllowance",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setBlock",
          inputs: [
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setChain",
          inputs: [
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stringToAddress",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "error",
          name: "FailedInnerCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1755131533.json",
      deploymentScript: "Deploy.s.sol",
    },
    zkMedClaimProver: {
      address: "0xe1da8919f262ee86f9be05059c9280142cf23f48",
      abi: [
        {
          type: "function",
          name: "parseDollarsToCents",
          inputs: [
            {
              name: "dollars",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "proof",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "proveClaimPayout",
          inputs: [
            {
              name: "unverifiedEmail",
              type: "tuple",
              internalType: "struct UnverifiedEmail",
              components: [
                {
                  name: "email",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "dnsRecord",
                  type: "tuple",
                  internalType: "struct DnsRecord",
                  components: [
                    {
                      name: "name",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "recordType",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "data",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "ttl",
                      type: "uint64",
                      internalType: "uint64",
                    },
                  ],
                },
                {
                  name: "verificationData",
                  type: "tuple",
                  internalType: "struct VerificationData",
                  components: [
                    {
                      name: "validUntil",
                      type: "uint64",
                      internalType: "uint64",
                    },
                    {
                      name: "signature",
                      type: "bytes",
                      internalType: "bytes",
                    },
                    {
                      name: "pubKey",
                      type: "bytes",
                      internalType: "bytes",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "",
              type: "tuple",
              internalType: "struct zkMedClaimProver.ClaimPayoutData",
              components: [
                {
                  name: "operationCode",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "payoutAmountCents",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "insurerEmailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "patientEmailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setBlock",
          inputs: [
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setChain",
          inputs: [
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "error",
          name: "FailedInnerCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1755131533.json",
      deploymentScript: "Deploy.s.sol",
    },
    zkMedCore: {
      address: "0x12975173b87f7595ee45dffb2ab812ece596bf84",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_usdc",
              type: "address",
              internalType: "address",
            },
            {
              name: "_patientRegistry",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hospitalRegistry",
              type: "address",
              internalType: "address",
            },
            {
              name: "_insurerRegistry",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "activateHospital",
          inputs: [
            {
              name: "hospitalAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "activateInsurer",
          inputs: [
            {
              name: "insurerAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addAdmin",
          inputs: [
            {
              name: "admin",
              type: "address",
              internalType: "address",
            },
            {
              name: "role",
              type: "uint8",
              internalType: "enum AdminLib.AdminRole",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "deactivateAdmin",
          inputs: [
            {
              name: "admin",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "deactivateHospital",
          inputs: [
            {
              name: "hospital",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "deactivateInsurer",
          inputs: [
            {
              name: "insurer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getRegistrationStats",
          inputs: [],
          outputs: [
            {
              name: "totalUsers",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "patients",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hospitals",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "insurers",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRole",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "role",
              type: "string",
              internalType: "string",
            },
            {
              name: "isActive",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalHospitals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalInsurers",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalPatients",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "hospitalRegistry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IHospitalRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "insurerRegistry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IInsurerRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAdmin",
          inputs: [
            {
              name: "admin",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isHospitalRegistered",
          inputs: [
            {
              name: "hospital",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isInsurerRegistered",
          inputs: [
            {
              name: "insurer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isPatientRegistered",
          inputs: [
            {
              name: "patient",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isUserRegistered",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "patientRegistry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IPatientRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registerHospital",
          inputs: [
            {
              name: "proof",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "data",
              type: "tuple",
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "registerInsurer",
          inputs: [
            {
              name: "proof",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "data",
              type: "tuple",
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "registerPatient",
          inputs: [
            {
              name: "proof",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "data",
              type: "tuple",
              internalType: "struct zkMedPatientProver.PatientRegistrationData",
              components: [
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "usdc",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract ERC20",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "AdminAdded",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "role",
              type: "uint8",
              indexed: false,
              internalType: "enum AdminLib.AdminRole",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AdminDeactivated",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HospitalRegistered",
          inputs: [
            {
              name: "data",
              type: "tuple",
              indexed: false,
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "InsurerRegistered",
          inputs: [
            {
              name: "data",
              type: "tuple",
              indexed: false,
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PatientRegistered",
          inputs: [
            {
              name: "data",
              type: "tuple",
              indexed: false,
              internalType: "struct zkMedPatientProver.PatientRegistrationData",
              components: [
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PaymentMade",
          inputs: [
            {
              name: "patient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "insurer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PaymentPlanCreated",
          inputs: [
            {
              name: "patient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "insurer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "planId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UserDeactivated",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "CannotAddSelf",
          inputs: [],
        },
        {
          type: "error",
          name: "CannotDeactivateSelf",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidAdminAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "NotAdmin",
          inputs: [],
        },
        {
          type: "error",
          name: "NotModerator",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "SuperAdminCannotBeAdded",
          inputs: [],
        },
        {
          type: "error",
          name: "SuperAdminCannotBeDeactivated",
          inputs: [],
        },
        {
          type: "error",
          name: "SuperAdminOnly",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1755131533.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
  84532: {
    zkMedCore: {
      address: "0xc3f21782cd8a9bfe749711f22beb8b94a5f9337e",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_usdc",
              type: "address",
              internalType: "address",
            },
            {
              name: "_patientRegistry",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hospitalRegistry",
              type: "address",
              internalType: "address",
            },
            {
              name: "_insurerRegistry",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "activateHospital",
          inputs: [
            {
              name: "hospitalAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "activateInsurer",
          inputs: [
            {
              name: "insurerAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addAdmin",
          inputs: [
            {
              name: "admin",
              type: "address",
              internalType: "address",
            },
            {
              name: "role",
              type: "uint8",
              internalType: "enum AdminLib.AdminRole",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "deactivateAdmin",
          inputs: [
            {
              name: "admin",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "deactivateHospital",
          inputs: [
            {
              name: "hospital",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "deactivateInsurer",
          inputs: [
            {
              name: "insurer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getRegistrationStats",
          inputs: [],
          outputs: [
            {
              name: "totalUsers",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "patients",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hospitals",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "insurers",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRole",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "role",
              type: "string",
              internalType: "string",
            },
            {
              name: "isActive",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalHospitals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalInsurers",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalPatients",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "hospitalRegistry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IHospitalRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "insurerRegistry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IInsurerRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAdmin",
          inputs: [
            {
              name: "admin",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isHospitalRegistered",
          inputs: [
            {
              name: "hospital",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isInsurerRegistered",
          inputs: [
            {
              name: "insurer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isPatientRegistered",
          inputs: [
            {
              name: "patient",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isUserRegistered",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "patientRegistry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IPatientRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registerHospital",
          inputs: [
            {
              name: "proof",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "data",
              type: "tuple",
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "registerInsurer",
          inputs: [
            {
              name: "proof",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "data",
              type: "tuple",
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "registerPatient",
          inputs: [
            {
              name: "proof",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "data",
              type: "tuple",
              internalType: "struct zkMedPatientProver.PatientRegistrationData",
              components: [
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "usdc",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract ERC20",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "AdminAdded",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "role",
              type: "uint8",
              indexed: false,
              internalType: "enum AdminLib.AdminRole",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AdminDeactivated",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HospitalRegistered",
          inputs: [
            {
              name: "data",
              type: "tuple",
              indexed: false,
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "InsurerRegistered",
          inputs: [
            {
              name: "data",
              type: "tuple",
              indexed: false,
              internalType: "struct zkMedOrganizationProver.OrganizationRegistrationData",
              components: [
                {
                  name: "requestedRole",
                  type: "uint8",
                  internalType: "enum zkMedOrganizationProver.UserType",
                },
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "domain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "organizationName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PatientRegistered",
          inputs: [
            {
              name: "data",
              type: "tuple",
              indexed: false,
              internalType: "struct zkMedPatientProver.PatientRegistrationData",
              components: [
                {
                  name: "walletAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "emailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PaymentMade",
          inputs: [
            {
              name: "patient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "insurer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PaymentPlanCreated",
          inputs: [
            {
              name: "patient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "insurer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "planId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UserDeactivated",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "CannotAddSelf",
          inputs: [],
        },
        {
          type: "error",
          name: "CannotDeactivateSelf",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidAdminAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "NotAdmin",
          inputs: [],
        },
        {
          type: "error",
          name: "NotModerator",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "SuperAdminCannotBeAdded",
          inputs: [],
        },
        {
          type: "error",
          name: "SuperAdminCannotBeDeactivated",
          inputs: [],
        },
        {
          type: "error",
          name: "SuperAdminOnly",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1752737504.json",
      deploymentScript: "DeployComplete.s.sol",
    },
    zkMedPaymentPlanProver: {
      address: "0xbf889940d28228abc9894e57bb8b031ad62dc3e4",
      abi: [
        {
          type: "function",
          name: "parseAmount",
          inputs: [
            {
              name: "amountStr",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "parseDate",
          inputs: [
            {
              name: "dateStr",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "proof",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "provePaymentPlan",
          inputs: [
            {
              name: "unverifiedEmail",
              type: "tuple",
              internalType: "struct UnverifiedEmail",
              components: [
                {
                  name: "email",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "dnsRecord",
                  type: "tuple",
                  internalType: "struct DnsRecord",
                  components: [
                    {
                      name: "name",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "recordType",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "data",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "ttl",
                      type: "uint64",
                      internalType: "uint64",
                    },
                  ],
                },
                {
                  name: "verificationData",
                  type: "tuple",
                  internalType: "struct VerificationData",
                  components: [
                    {
                      name: "validUntil",
                      type: "uint64",
                      internalType: "uint64",
                    },
                    {
                      name: "signature",
                      type: "bytes",
                      internalType: "bytes",
                    },
                    {
                      name: "pubKey",
                      type: "bytes",
                      internalType: "bytes",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct Proof",
              components: [
                {
                  name: "seal",
                  type: "tuple",
                  internalType: "struct Seal",
                  components: [
                    {
                      name: "verifierSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "seal",
                      type: "bytes32[8]",
                      internalType: "bytes32[8]",
                    },
                    {
                      name: "mode",
                      type: "uint8",
                      internalType: "enum ProofMode",
                    },
                  ],
                },
                {
                  name: "callGuestId",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "length",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "callAssumptions",
                  type: "tuple",
                  internalType: "struct CallAssumptions",
                  components: [
                    {
                      name: "proverContractAddress",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "functionSelector",
                      type: "bytes4",
                      internalType: "bytes4",
                    },
                    {
                      name: "settleChainId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockNumber",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "settleBlockHash",
                      type: "bytes32",
                      internalType: "bytes32",
                    },
                  ],
                },
              ],
            },
            {
              name: "",
              type: "tuple",
              internalType: "struct zkMedPaymentPlanProver.PaymentPlanData",
              components: [
                {
                  name: "insurerAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "patientAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "insuranceName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "insurerEmailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "patientEmailHash",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "duration",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "monthlyAllowance",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setBlock",
          inputs: [
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setChain",
          inputs: [
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "blockNo",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stringToAddress",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "error",
          name: "FailedInnerCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1752737504.json",
      deploymentScript: "DeployComplete.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
